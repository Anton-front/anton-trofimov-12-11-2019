{"version":3,"sources":["weather-ico.png","components/header/index.js","views/Home.js","views/Favorites.js","components/layout/index.js","AppMain.js","theme/light.js","theme/dark.js","store/themeUI.js","store/weatherInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","inject","themeUI","AppBar","position","Grid","container","direction","justify","alignItems","className","MenuList","MenuItem","to","FormControlLabel","label","control","Switch","onChange","changeTheme","color","useStyles","makeStyles","theme","gridItem","palette","primary","main","padding","days","Home","observer","weatherInfo","classes","Paper","component","onSubmit","e","preventDefault","handleSubmit","InputBase","placeholder","handleChange","target","value","defaultCity","IconButton","type","aria-label","isLoading","src","icoImg","alt","Typography","variant","currentCityInfo","LocalizedName","Country","convertCelsToFahr","currentCityWeather","Temperature","Metric","Value","Fab","isFavorite","onClick","handleToggleItems","checkFavorite","WeatherText","weather5day","map","item","index","key","Minimum","Maximum","display","Day","IconPhrase","CircularProgress","convertUnits","checked","currentUnit","Favorites","favorites","Card","CardContent","CardActions","newCity","root","spacing","routes","path","exact","Layout","Container","props","AppMain","ThemeProvider","currentTheme","themeLight","createMuiTheme","themeDark","ThemeUI","this","JSON","stringify","decorate","observable","action","WeatherInfo","apikey","urlAutocomplete","urlCityInfo","urlWeather5day","some","el","celsius","cToFahr","toFixed","stateCheck","getDataObj","filter","push","fetchData","city","fetch","then","response","json","resData","length","newRes","Key","DailyForecasts","catch","error","console","log","stores","App","basename","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3392010d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather-ico.3d7b78de.png\";","import React from 'react';\r\nimport { BrowserRouter as Route, NavLink } from \"react-router-dom\";\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { inject } from 'mobx-react';\r\n\r\nconst Header = inject('themeUI')(({themeUI}) =>(\r\n  <AppBar position=\"static\">\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n    >\r\n      <nav className=\"nav-bar\">\r\n        <MenuList className=\"main-nav\">\r\n          <MenuItem>\r\n            <NavLink to=\"/\">Home</NavLink>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <NavLink to=\"/favorites\">Favorites</NavLink>\r\n          </MenuItem>\r\n        </MenuList>\r\n      </nav>\r\n      <FormControlLabel\r\n        label=\"Switch theme\"\r\n        control={\r\n          <Switch\r\n            onChange={() => {themeUI.changeTheme()}}\r\n            color=\"secondary\"\r\n          />\r\n        }\r\n      />\r\n    </Grid>\r\n  </AppBar>\r\n  )\r\n)\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport icoImg from '../weather-ico.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gridItem: {\r\n      color: theme.palette.primary.main,\r\n      padding: '30px 20px'\r\n    },\r\n}));\r\n\r\nconst days = ['Sun', 'Mon', 'Tus', 'Wen', 'Thu'];\r\n\r\nconst Home  = inject('weatherInfo')(observer(({weatherInfo}) => {\r\n  const classes = useStyles();\r\n\r\n  const changeCity = (e) => {\r\n    weatherInfo.handleChange(e.target.value);\r\n  }\r\n\r\n  const submitSearch = (e) => {\r\n    e.preventDefault();\r\n    weatherInfo.handleSubmit();\r\n  }\r\n\r\n  const toggleFavorites = (e) => {\r\n    e.preventDefault();\r\n    weatherInfo.handleToggleItems();\r\n    weatherInfo.checkFavorite();\r\n  }\r\n\r\n  const changeUnits = (e) => {\r\n    weatherInfo.convertUnits(e.target.checked)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n      >\r\n        <Paper\r\n          component=\"form\"\r\n          className=\"search-form\"\r\n          onSubmit={ submitSearch }\r\n        >\r\n          <InputBase\r\n            placeholder=\"Search city\"\r\n            onChange={ changeCity }\r\n            value={ weatherInfo.defaultCity }\r\n          />\r\n          <IconButton\r\n            type=\"submit\"\r\n            aria-label=\"search\"\r\n          >\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n      <Paper\r\n        className={ classes.gridItem }\r\n      >\r\n        <div className={(weatherInfo.isLoading) ? 'preloader-wrap active' : 'preloader-wrap' }>\r\n          <div className=\"weather-details-wrap\">\r\n            <div className=\"weather-details-col\">\r\n              <div className=\"weather-details-img\">\r\n                <img\r\n                  src={ icoImg }\r\n                  alt=\"weather ico\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                >\r\n                  { weatherInfo.currentCityInfo.LocalizedName },\r\n                  &nbsp;\r\n                  { weatherInfo.currentCityInfo.Country.LocalizedName }\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                >\r\n                  { weatherInfo.convertCelsToFahr(weatherInfo.currentCityWeather.Temperature.Metric.Value) }\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"weather-details-col btn-wrap\">\r\n              <Fab\r\n                aria-label=\"like\"\r\n                color=\"primary\"\r\n                className={ (weatherInfo.isFavorite) ? 'favorite-on' : 'favorite-off' }\r\n                onClick={ toggleFavorites }\r\n              >\r\n                <FavoriteIcon />\r\n              </Fab>\r\n            </div>\r\n          </div>\r\n          <Typography\r\n            variant=\"h3\"\r\n            className=\"weather-heading-text\"\r\n          >\r\n            { weatherInfo.currentCityWeather.WeatherText }\r\n          </Typography>\r\n          <div className=\"weather-days-wrap\">\r\n            { weatherInfo.weather5day.map((item, index) =>\r\n              <article\r\n                className=\"day-weather-item\"\r\n                key={ index }\r\n              >\r\n                <div className=\"text-center\">\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    className=\"day-title\"\r\n                  >\r\n                    { days[index] }\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"p\"\r\n                  >\r\n                    min: &nbsp;\r\n                    { weatherInfo.convertCelsToFahr(item.Temperature.Minimum.Value) }\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"p\"\r\n                  >\r\n                    max: &nbsp;\r\n                    { weatherInfo.convertCelsToFahr(item.Temperature.Maximum.Value) }\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    display=\"block\"\r\n                    className=\"weather-day-caption\"\r\n                  >\r\n                    { item.Day.IconPhrase }\r\n                  </Typography>\r\n                </div>\r\n              </article>\r\n            )}\r\n          </div>\r\n          <div className=\"preloader-ico-wrap\">\r\n            <CircularProgress className=\"preloader-ico\" />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <FormControlLabel\r\n            label=\"convert to fahrenheit\"\r\n            control={\r\n              <Switch\r\n                onChange={ changeUnits }\r\n                checked={ weatherInfo.currentUnit }\r\n                value={ weatherInfo.currentUnit }\r\n                color=\"secondary\"\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}));\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { BrowserRouter as Route, NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer, inject } from 'mobx-react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  gridItem: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Favorites  = inject('weatherInfo')(observer(({weatherInfo}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const submitSearch = (newCity) => {\r\n    weatherInfo.handleChange(newCity);\r\n    weatherInfo.handleSubmit();\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className=\"weather-favorites-wrap\">\r\n      { weatherInfo.favorites.map((item, index) =>\r\n        <div\r\n        className='weather-favorite-col text-center'\r\n          key={ index }>\r\n          <Card\r\n            className='weather-favorite-item text-center'\r\n          >\r\n            <div className={ classes.gridItem }>\r\n              <CardContent>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                >\r\n                  { item.LocalizedName }\r\n                </Typography>\r\n                <Typography\r\n                  component=\"p\"\r\n                >\r\n                  { weatherInfo.convertCelsToFahr(item.Temperature.Metric.Value) }\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions className=\"btn-details-wrap\">\r\n                <NavLink\r\n                  className=\"btn-details-link\"\r\n                  to=\"/\"\r\n                  onClick={ () => submitSearch(item.LocalizedName) }\r\n                >\r\n                  See details\r\n                </NavLink>\r\n              </CardActions>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}))\r\n\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Home from '../../views/Home';\r\nimport Favorites from '../../views/Favorites';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(5, 1),\r\n  },\r\n}));\r\n\r\nconst routes = [\r\n\t{\r\n    key: 0,\r\n\t\tpath: '/',\r\n\t\texact: true,\r\n\t\tcomponent: Home\r\n\t},\r\n\t{\r\n    key: 1,\r\n\t\tpath: '/favorites',\r\n\t\texact: true,\r\n\t\tcomponent: Favorites\r\n\t}  \r\n];\r\n\r\nexport default function Layout() {\r\n\tconst classes = useStyles();\r\n\r\n  return (\r\n  \t<main className={classes.root}>\r\n      <Container>\r\n        <Switch>\r\n        \t{ routes.map((props) => <Route {...props} />) }\r\n        </Switch>\r\n      </Container>\r\n  \t</main>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Header from './components/header';\r\nimport Layout from './components/layout';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nconst AppMain = inject('themeUI')(observer(({themeUI}) => (\r\n  <ThemeProvider theme={themeUI.currentTheme}>\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Layout />\r\n    </div>\r\n  </ThemeProvider>\r\n)))\r\n\r\nexport default AppMain;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst themeLight = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1a72b0',\r\n    }\r\n  },\r\n});\r\n\r\nexport default themeLight;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst themeDark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1f1f1f'\r\n    }\r\n  },\r\n});\r\n\r\nexport default themeDark;\r\n","import { observable, action, decorate } from 'mobx';\r\nimport themeLight from './../theme/light';\r\nimport themeDark from './../theme/dark';\r\n\r\nclass ThemeUI {\r\n  constructor() {\r\n    this.currentTheme = themeLight;\r\n  }\r\n\r\n  changeTheme() {\r\n    if (JSON.stringify(this.currentTheme) === JSON.stringify(themeLight)) {\r\n        this.currentTheme = themeDark\r\n    } else {\r\n        this.currentTheme = themeLight\r\n    }\r\n  }\r\n}\r\n\r\ndecorate(ThemeUI, {\r\n  currentTheme: observable,\r\n  changeTheme: action\r\n})\r\n\r\nconst themeUI = new ThemeUI();\r\n\r\nexport default themeUI;\r\nexport { ThemeUI };\r\n","import { observable, computed, action, decorate } from 'mobx';\r\n\r\nclass WeatherInfo {\r\n  constructor() {\r\n    this.defaultCity = 'Tel Aviv';\r\n    this.isFavorite = false;\r\n    this.currentUnit = false;\r\n    this.apikey = 'apikey=QRSvCLOb3LqnkAzAL6JDuIeLTkUZhwxO';\r\n    this.urlAutocomplete = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete';\r\n    this.urlCityInfo = 'https://dataservice.accuweather.com/currentconditions/v1/';\r\n    this.urlWeather5day = 'https://dataservice.accuweather.com/forecasts/v1/daily/5day/';\r\n    this.isLoading = false;\r\n    this.favorites = [\r\n    ];\r\n    this.currentCityInfo = {\r\n      \"Version\": 1,\r\n      \"Key\": \"215854\",\r\n      \"Type\": \"City\",\r\n      \"Rank\": 31,\r\n      \"LocalizedName\": \"Tel Aviv\",\r\n      \"Country\": {\r\n        \"ID\": \"IL\",\r\n        \"LocalizedName\": \"Israel\"\r\n      },\r\n      \"AdministrativeArea\": {\r\n        \"ID\": \"TA\",\r\n        \"LocalizedName\": \"Tel Aviv\"\r\n      }\r\n    };\r\n    this.currentCityWeather = {\r\n      \"LocalObservationDateTime\": \"2019-11-13T18:20:00+02:00\",\r\n      \"EpochTime\": 1573662000,\r\n      \"WeatherText\": \"Clear\",\r\n      \"WeatherIcon\": 33,\r\n      \"HasPrecipitation\": false,\r\n      \"PrecipitationType\": null,\r\n      \"IsDayTime\": false,\r\n      \"Temperature\": {\r\n        \"Metric\": {\r\n          \"Value\": 27.6,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        },\r\n        \"Imperial\": {\r\n          \"Value\": 82,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        }\r\n      },\r\n      \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n    };\r\n    this.weather5day = [\r\n      {\r\n        \"Date\": \"2019-11-14T07:00:00+02:00\",\r\n        \"EpochDate\": 1573707600,\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 21.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 31.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"Day\": {\r\n          \"Icon\": 1,\r\n          \"IconPhrase\": \"Sunny\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 34,\r\n          \"IconPhrase\": \"Mostly clear\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2019-11-15T07:00:00+02:00\",\r\n        \"EpochDate\": 1573794000,\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 16.6,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 25.8,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"Day\": {\r\n          \"Icon\": 17,\r\n          \"IconPhrase\": \"Partly sunny w/ t-storms\",\r\n          \"HasPrecipitation\": true,\r\n          \"PrecipitationType\": \"Rain\",\r\n          \"PrecipitationIntensity\": \"Moderate\"\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 41,\r\n          \"IconPhrase\": \"Partly cloudy w/ t-storms\",\r\n          \"HasPrecipitation\": true,\r\n          \"PrecipitationType\": \"Rain\",\r\n          \"PrecipitationIntensity\": \"Moderate\"\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2019-11-16T07:00:00+02:00\",\r\n        \"EpochDate\": 1573880400,\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 16.9,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 25,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"Day\": {\r\n          \"Icon\": 2,\r\n          \"IconPhrase\": \"Mostly sunny\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 33,\r\n          \"IconPhrase\": \"Clear\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2019-11-17T07:00:00+02:00\",\r\n        \"EpochDate\": 1573966800,\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 15.4,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 26.2,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"Day\": {\r\n          \"Icon\": 2,\r\n          \"IconPhrase\": \"Mostly sunny\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 34,\r\n          \"IconPhrase\": \"Mostly clear\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&unit=c&lang=en-us\"\r\n      },\r\n      {\r\n        \"Date\": \"2019-11-18T07:00:00+02:00\",\r\n        \"EpochDate\": 1574053200,\r\n        \"Temperature\": {\r\n          \"Minimum\": {\r\n            \"Value\": 14.4,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          },\r\n          \"Maximum\": {\r\n            \"Value\": 25.1,\r\n            \"Unit\": \"C\",\r\n            \"UnitType\": 17\r\n          }\r\n        },\r\n        \"Day\": {\r\n          \"Icon\": 3,\r\n          \"IconPhrase\": \"Partly sunny\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Night\": {\r\n          \"Icon\": 33,\r\n          \"IconPhrase\": \"Clear\",\r\n          \"HasPrecipitation\": false\r\n        },\r\n        \"Sources\": [\r\n          \"AccuWeather\"\r\n        ],\r\n        \"MobileLink\": \"http://m.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&unit=c&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&unit=c&lang=en-us\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  checkFavorite() {\r\n    this.isFavorite = this.favorites.some(el => (\r\n      el.LocalizedName === this.currentCityInfo.LocalizedName\r\n    ));\r\n  }\r\n\r\n  convertCelsToFahr(celsius) {\r\n    const cToFahr = celsius * 9 / 5 + 32;\r\n\r\n    if (this.currentUnit === false) {\r\n      return (celsius + '\\xB0C')\r\n    } else {\r\n      return (cToFahr.toFixed(2) + '\\xB0F')\r\n    }\r\n  }\r\n\r\n  convertUnits(stateCheck) {\r\n    this.currentUnit = stateCheck;\r\n  }\r\n\r\n  handleToggleItems() {\r\n    const getDataObj = {\r\n      \"Key\": this.currentCityInfo.key,\r\n      \"LocalizedName\": this.currentCityInfo.LocalizedName,\r\n      \"WeatherText\": this.currentCityWeather.WeatherText,\r\n      \"Temperature\": {\r\n        \"Metric\": {\r\n          \"Value\": this.currentCityWeather.Temperature.Metric.Value,\r\n          \"Unit\": \"C\",\r\n          \"UnitType\": 17\r\n        }\r\n      }\r\n    }\r\n\r\n    const foundEl = this.favorites.some(el => (\r\n      el.LocalizedName === this.currentCityInfo.LocalizedName\r\n    ));\r\n\r\n    if (!foundEl) {\r\n      this.favorites.push(getDataObj);\r\n    } else {\r\n      this.favorites = this.favorites.filter((value, index) => {\r\n        return value.LocalizedName !== this.currentCityInfo.LocalizedName\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange(newCity) {\r\n    this.defaultCity = newCity;\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.fetchData(this.defaultCity);\r\n  }\r\n\r\n  fetchData(city) {\r\n    this.isLoading = true;\r\n    fetch(this.urlAutocomplete + '?q=' + city + '&' + this.apikey)\r\n      .then(response => response.json())\r\n      .then(resData => {\r\n        if (resData.length > 0) {\r\n          this.currentCityInfo = resData[0]\r\n        }\r\n      })\r\n      .then(newRes => (\r\n        fetch(this.urlCityInfo + this.currentCityInfo.Key + '?' + this.apikey)\r\n          .then(response => response.json())\r\n          .then(resData => {\r\n            if (resData.length > 0) {\r\n              this.currentCityWeather = resData[0]\r\n            }\r\n          })\r\n          .then(newRes => (\r\n            fetch(this.urlWeather5day + this.currentCityInfo.Key + '?' + this.apikey + '&metric=true')\r\n              .then(response => response.json())\r\n              .then(resData => {\r\n                this.weather5day = resData.DailyForecasts;\r\n                this.isLoading = false;\r\n                this.checkFavorite();\r\n              })\r\n            ))\r\n        ))\r\n      .catch(error => {\r\n        console.log('error message: ', error);\r\n        this.isLoading = false;\r\n      })\r\n  }\r\n}\r\n\r\ndecorate(WeatherInfo, {\r\n  defaultCity: observable,\r\n  currentCityInfo: observable,\r\n  currentCityWeather: observable,\r\n  weather5day: observable,\r\n  favorites: observable,\r\n  isFavorite: observable,\r\n  currentUnit: observable,\r\n  handleChange: action,\r\n  handleSubmit: action,\r\n  handleToggleItems: action,\r\n  checkFavorite: action,\r\n  convertCelsToFahr: action,\r\n  convertUnits: action\r\n})\r\n\r\nconst weatherInfo = new WeatherInfo();\r\n\r\nexport default weatherInfo;\r\nexport { WeatherInfo };\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport AppMain from './AppMain';\r\nimport { Provider } from 'mobx-react';\r\nimport themeUI from './store/themeUI';\r\nimport weatherInfo from './store/weatherInfo';\r\n\r\nconst stores = { themeUI, weatherInfo };\r\n\r\nconst App = () => (\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <Provider { ...stores }>\r\n      <AppMain />\r\n    </Provider>\r\n  </Router>\r\n)\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}